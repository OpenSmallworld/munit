#% text_encoding = iso8859_1
_package sw
	 
_pragma(classify_level=deprecated,topic=MUnit)
def_slotted_exemplar(:munit_test_setup,
{},
{:test_setup})
$

_pragma(classify_level=deprecated,topic=MUnit)
munit_test_setup.define_slot_access(
        :test,
        :writable,
	:read_only)
$

_pragma(classify_level=deprecated,topic=MUnit)
_method munit_test_setup.run(_optional a_test_result)
	## Runs a test and collects its result in a test_result instance.

	a_test_result << a_test_result.default( munit_test_result.new() )
	_self.set_up()
	_protect
		_self.basic_run(a_test_result)
	_protection
		_self.tear_down()
	_endprotect
	>> a_test_result
_endmethod
$

_pragma(classify_level=deprecated,topic=MUnit)
_method munit_test_setup.count_test_cases()
	## Count number of tests.

	_self.suite()
	>> _super.count_test_cases()
_endmethod
$

_pragma(classify_level=deprecated,topic=MUnit)
_method munit_test_setup.infrastructure?
	## Implement interface method.

	>> _self _is sw:munit_test_setup
_endmethod
$
