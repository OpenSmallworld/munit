#% text_encoding = iso8859_1

_package sw
$
#remex(:traceback_viewer_plugin)
#$
_pragma(classify_level=debug, topic={MUnit})
def_slotted_exemplar(:traceback_viewer_plugin, 
	{
		{ :traceback_viewer, _unset }
	},
	{:plugin})
$

_pragma(classify_level=debug, topic={MUnit})
traceback_viewer_plugin.define_slot_externally_readable( :traceback_viewer )
$

_pragma(classify_level=debug, topic={MUnit})
_method traceback_viewer_plugin.traceback_viewer
	_if .traceback_viewer _is _unset 
	_then 
		.traceback_viewer << simple_traceback_viewer.new( {} ) #traceback_viewer.new( {} )
	_endif
	
	_return .traceback_viewer 	
_endmethod
$

_pragma(classify_level=debug, topic={MUnit})
_method traceback_viewer_plugin.failure_selected( a_failure )
	
	_if a_failure.responds_to?( :|traceback| )
	_then 
		_self.show_traceback( a_failure.traceback )		
	_else 
		_self.reset_traceback_viewer()
	_endif 
	
_endmethod
$

_pragma(classify_level=debug, topic={MUnit})
_method traceback_viewer_plugin.show_traceback( a_traceback )
	_self.traceback_viewer.show_traceback( a_traceback )
_endmethod
$

_pragma(classify_level=debug, topic={MUnit})
_method traceback_viewer_plugin.build_gui(parent, _optional xml_element)
		>> _self.traceback_viewer.build_gui( parent )	
_endmethod
$

_pragma(classify_level=debug, topic={MUnit})
_method traceback_viewer_plugin.reset_traceback_viewer()
	_self.traceback_viewer.show_traceback( rope.new() ) 
_endmethod
$

_pragma(classify_level=debug, topic={MUnit})
_method traceback_viewer_plugin.refresh()
	
_endmethod
$
